// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: like.proto

package like

import (
	"context"

	"inquora/application/like/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	IsThumbUpRequest  = pb.IsThumbUpRequest
	IsThumbUpResponse = pb.IsThumbUpResponse
	ThumbUpRequest    = pb.ThumbUpRequest
	ThumbUpResponse   = pb.ThumbUpResponse
	UserThumbUp       = pb.UserThumbUp

	Like interface {
		ThumbUp(ctx context.Context, in *ThumbUpRequest, opts ...grpc.CallOption) (*ThumbUpResponse, error)
		IsThumbUp(ctx context.Context, in *IsThumbUpRequest, opts ...grpc.CallOption) (*IsThumbUpResponse, error)
	}

	defaultLike struct {
		cli zrpc.Client
	}
)

func NewLike(cli zrpc.Client) Like {
	return &defaultLike{
		cli: cli,
	}
}

func (m *defaultLike) ThumbUp(ctx context.Context, in *ThumbUpRequest, opts ...grpc.CallOption) (*ThumbUpResponse, error) {
	client := pb.NewLikeClient(m.cli.Conn())
	return client.ThumbUp(ctx, in, opts...)
}

func (m *defaultLike) IsThumbUp(ctx context.Context, in *IsThumbUpRequest, opts ...grpc.CallOption) (*IsThumbUpResponse, error) {
	client := pb.NewLikeClient(m.cli.Conn())
	return client.IsThumbUp(ctx, in, opts...)
}
